
import feature ;
import os ;
import property-set ;
import path ;

feature.feature mico-dir : path ;

path-constant current : . ;

project tests ;

make hello.cc : idl/hello.idl : @compile.idl ;
make hello.h : hello.cc : @compile.nothing ;

actions compile.nothing
{
}
rule compile.idl ( target : source : requirements * )
{
  OLDPATH on $(<) = [ os.environ "PATH" ] ;
  local micodir = [ os.environ "MICODIR" ] ;
  MICOBIN on $(<) = $(micodir)/bin/mico-2.3.13-singlethread-debug ;
  SOURCE on $(<) = [ path.join $(current)/$(source:G=) ] ;
}

actions compile.idl
{
  cd $(<:D)
  PATH=$(MICOBIN):$(OLDPATH) idl $(SOURCE)
}

local openbus_home = [ os.environ "OPENBUS_HOME" ] ;

lib mico : :
  <name>mico2.3.13
  <threading>multi <variant>debug
  <search>$(openbus_home)/lib/mico-2.3.13-multithread-debug
 : :
  <include>$(openbus_home)/include/mico-2.3.13-multithread-debug
 ;

lib mico : :
  <name>mico2.3.13
  <threading>single <variant>debug
  <search>$(openbus_home)/lib/mico-2.3.13-singlethread-debug
 : :
  <include>$(openbus_home)/include/mico-2.3.13-singlethread-debug
 ;

lib mico : :
  <name>mico2.3.13
  <threading>single <variant>release
  <search>$(openbus_home)/lib/mico-2.3.13-singlethread
 : :
  <include>$(openbus_home)/include/mico-2.3.13-singlethread
 ;

lib mico : :
  <name>mico2.3.13
  <threading>multi <variant>release
  <search>$(openbus_home)/lib/mico-2.3.13-multithread
 : :
  <include>$(openbus_home)/include/mico-2.3.13-multithread
 ;

lib scs : mico :
  <name>scs-micosinglethread-debug
  <threading>single <variant>debug
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include/scs/stubs
  <include>$(openbus_home)/include/scs
 ;

lib scs : mico :
  <name>scs-micosinglethread
  <threading>single <variant>release
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include/scs/stubs
  <include>$(openbus_home)/include/scs
 ;

lib scs : mico :
  <name>scs-micomultithread-debug
  <threading>multi <variant>debug
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include/scs/stubs
  <include>$(openbus_home)/include/scs
  <define>SCS_THREADING_ENABLED
 ;

lib scs : mico :
  <name>scs-micomultithread
  <threading>multi <variant>release
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include/scs/stubs
  <include>$(openbus_home)/include/scs
  <define>SCS_THREADING_ENABLED
 ;

lib logger : :
  <name>logger-multithread-debug
  <threading>multi <variant>debug
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include
 ;

lib logger : :
  <name>logger-multithread
  <threading>multi <variant>release
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include
 ;

lib logger : :
  <name>logger-singlethread-debug
  <threading>single <variant>debug
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include
  <define>LOGGER_DISABLE_THREADS
 ;

lib logger : :
  <name>logger-singlethread
  <threading>single <variant>release
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include
  <define>LOGGER_DISABLE_THREADS
 ;

lib openbus : scs logger :
  <name>openbus-micosinglethread-debug
  <threading>single <variant>debug
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include/openbus/cpp/stubs
  <include>$(openbus_home)/include/openbus/cpp
 ;

lib openbus : scs logger :
  <name>openbus-micomultithread-debug
  <threading>multi <variant>debug
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include/openbus/cpp/stubs
  <include>$(openbus_home)/include/openbus/cpp
  <define>OPENBUS_SDK_MULTITHREAD
 ;

lib openbus : scs logger :
  <name>openbus-micosinglethread
  <threading>single <variant>release
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include/openbus/cpp/stubs
  <include>$(openbus_home)/include/openbus/cpp
  <define>OPENBUS_SDK_MULTITHREAD
 ;

lib openbus : scs logger :
  <name>openbus-micomultithread
  <threading>multi <variant>release
  <search>$(openbus_home)/lib
 : :
  <include>$(openbus_home)/include/openbus/cpp/stubs
  <include>$(openbus_home)/include/openbus/cpp
  <define>OPENBUS_SDK_MULTITHREAD
 ;
lib assistant : openbus :
  <name>assistant-micosinglethread-debug
  <threading>single <variant>debug
  <search>$(openbus_home)/lib
 ;

lib assistant : openbus :
  <name>assistant-micosinglethread
  <threading>single <variant>release
  <search>$(openbus_home)/lib
 ;

lib assistant : openbus :
  <name>assistant-micomultithread-debug
  <threading>multi <variant>debug
  <search>$(openbus_home)/lib
 : :
  <define>ASSISTANT_SDK_MULTITHREAD
 ;

lib assistant : openbus :
  <name>assistant-micomultithread
  <threading>multi <variant>release
  <search>$(openbus_home)/lib
 : :
  <define>ASSISTANT_SDK_MULTITHREAD
 ;

lib crypto : : <name>crypto <search>$(openbus_home)/lib ;

lib openssl : crypto : <name>ssl <search>$(openbus_home)/lib
 : : <include>$(openbus_home)/include/openssl-1.0.0
 ;

lib system : : <name>boost_system-st <search>$(openbus_home/lib)
 <threading>single ;
lib chrono : : <name>boost_chrono-st <search>$(openbus_home/lib)
 <threading>single ;
lib system : : <name>boost_system-mt <search>$(openbus_home/lib)
 <threading>multi ;
lib chrono : : <name>boost_chrono-mt <search>$(openbus_home/lib)
 <threading>multi ;
lib thread : : <name>boost_thread-mt <search>$(openbus_home/lib) ;

local requirements =
  <include>../include
  <include>$(openbus_home)/include
  <include>$(openbus_home)/include/boost
  <threading>multi:<source>thread
 ;

local dependencies =
 assistant openssl system chrono
 ;

exe add_offer : add_offer.cpp hello.cc $(dependencies)
  : <implicit-dependency>hello.h
    $(requirements)
 ;

exe create_assistant_with_password : create_assistant_with_password.cpp
 $(dependencies)
 :
   $(requirements)
 ;

# exe create_assistant_with_password : create_assistant_with_password.cpp
#  $(dependencies)
#  :
#    $(requirements)
#  ;

install stage : add_offer create_assistant_with_password ;
