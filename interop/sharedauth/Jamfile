import os ;

project openbus/interop/sharedauth
  : requirements <include>../ <include>../../
    <use>/boost//headers
  ;

path-constant here : . ;

interop-basic-idl-path = [ os.environ INTEROP_BASIC_IDL_PATH ] ;
if ! $(interop-basic-idl-path)
{
  interop-basic-idl-path = $(here)/../../../openbus-sdk-idl-interop-basic ;
}

interop-sharedauth-idl-path = [ os.environ INTEROP_SHAREDAUTH_IDL_PATH ] ;
if ! $(interop-sharedauth-idl-path)
{
  interop-sharedauth-idl-path = $(here)/../../../openbus-sdk-idl-interop-sharedauth ;
}

obj hello-stub
  : $(interop-basic-idl-path)/hello.idl
  : <warnings>off
  ;
explicit hello-stub ;

obj hello-skeleton
  : $(interop-basic-idl-path)/hello.idl
  : <generate>skeleton
    <warnings>off
  ;
explicit hello-skeleton ;

obj encoding-stub
  : $(interop-sharedauth-idl-path)/encoding.idl
  : <warnings>off
  ;
explicit encoding-stub ;

exe sharedauth_consuming
  : src/consuming.cpp 
    /openbus//openbus 
    /scs//scs 
    /logger//logger 
    /boost//program_options 
    /openssl//openssl    
    /TAO//TAO
    hello-stub
    encoding-stub
  : <threading>multi:<source>/boost//thread
    <target-os>windows:<library>/openbus//idls
    <target-os>windows:<library>/scs//scs-stub
    <dependency>hello-stub
    <implicit-dependency>hello-stub
    <dependency>encoding-stub
    <implicit-dependency>encoding-stub
    <link>static,<target-os>linux:<source>/dl//dl
  ;
explicit sharedauth_consuming ;

exe sharedauth_sharing
  : src/sharing.cpp 
    /openbus//openbus 
    /scs//scs 
    /logger//logger 
    /boost//program_options
    /boost//filesystem
    /openssl//openssl
    /TAO//TAO
    hello-stub
    hello-skeleton
  : <threading>multi:<source>/boost//thread
    <target-os>windows:<library>/openbus//idls
    <target-os>windows:<library>/scs//scs-stub
    <dependency>hello-stub
    <implicit-dependency>hello-stub
    <dependency>hello-skeleton
    <implicit-dependency>hello-skeleton
    <dependency>encoding-stub
    <implicit-dependency>encoding-stub
    <link>static,<target-os>linux:<source>/dl//dl
  ;
explicit sharedauth_sharing ;

alias sharedauth
  : sharedauth_consuming
    sharedauth_sharing
  ;
