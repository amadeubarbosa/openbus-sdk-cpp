
path-constant here : . ;

project openbus/tests ;

local rule exe-test ( test-name : filename : idl ? )
{
  local test-dependencies = /openbus//openbus
   /mico//mico /scs//scs /boost//headers /logger//logger
   /openbus//core-idls /openssl//openssl ;
  local test-requirements = <implicit-dependency>/openbus//core-idls
    <threading>multi:<source>/boost//thread <include>.
    <implicit-dependency>$(idl) <target-os>linux,<link>static:<source>/dl//dl
  ;
  exe $(test-name) : $(filename) $(idl) $(test-dependencies)
   : $(test-requirements) ;
  explicit $(test-name) ;
}

exe-test connect_host_port_connect_to_right_host_and_port
 : connect/host_port/connect_to_right_host_and_port.cpp ;
exe-test connect_host_port_connect_to_wrong_host_and_port
 : connect/host_port/connect_to_wrong_host_and_port.cpp ;
# exe-test connect_host_port_connect_with_empty_host
#  : connect/host_port/connect_with_empty_host.cpp ;
#exe-test connect_orb_connect_getting_orb_with_ORB_init
# : connect/orb/connect_getting_orb_with_ORB_init.cpp ;
exe-test connect_orb_connect_getting_orb_with_createORB
 : connect/orb/connect_getting_orb_with_createORB.cpp ;

alias test-hello-idl : $(here)/idl/hello.idl ;
explicit test-hello-idl ;

exe-test connection_caller_chain_receive_call_with_default_connection_get_caller_chain
 : connection/caller_chain/receive_call_with_default_connection_get_caller_chain.cpp
 : test-hello-idl ;
exe-test connection_loginByCertificate_entity_id_and_file_private_key_ok
 : connection/loginByCertificate/entity_id_and_file_private_key_ok.cpp ;
exe-test connection_loginByPassword_after_logout
 : connection/loginByPassword/after_logout.cpp ;
exe-test connection_loginByPassword_entity_id_and_password_ok
 : connection/loginByPassword/entity_id_and_password_ok.cpp ;
exe-test connection_loginByPassword_login_when_already_logged
 : connection/loginByPassword/login_when_already_logged.cpp ;
exe-test connection_loginByPassword_wrong_password
 : connection/loginByPassword/wrong_password.cpp ;
exe-test connection_login_login_info_after_login
 : connection/login/login_info_after_login.cpp ;

exe-test connection_manager_calls_with_default_connection
 : connection_manager/calls_with_default_connection.cpp
 : test-hello-idl ;
exe-test connection_manager_calls_with_dispatcher
 : connection_manager/calls_with_dispatcher.cpp
 : test-hello-idl ;
exe-test connection_manager_calls_with_thread_requester
 : connection_manager/calls_with_thread_requester.cpp
 : test-hello-idl ;
exe-test connection_manager_create_connection_to_accessible_bus
 : connection_manager/create_connection_to_accessible_bus.cpp
 ;
exe-test connection_manager_create_connection_to_inaccessible_bus
 : connection_manager/create_connection_to_inaccessible_bus.cpp
 ;
exe-test connection_manager_create_connection_to_invalid_host
 : connection_manager/create_connection_to_invalid_host.cpp
 ;
exe-test connection_manager_get_manager
 : connection_manager/get_manager.cpp
 ;
exe-test connection_manager_receive_call_with_default_connection
 : connection_manager/receive_call_with_default_connection.cpp
 : test-hello-idl ;
exe-test fail_user_created_orb
 : fail_user_created_orb.cpp ;
exe-test get_offer
 : get_offer.cpp
 : test-hello-idl ;
exe-test register_service
 : register_service.cpp
 : test-hello-idl ;

alias tests : connect_host_port_connect_to_right_host_and_port
 connect_host_port_connect_to_wrong_host_and_port
 connect_orb_connect_getting_orb_with_createORB
 connection_caller_chain_receive_call_with_default_connection_get_caller_chain
 connection_loginByCertificate_entity_id_and_file_private_key_ok
 connection_loginByPassword_after_logout
 connection_loginByPassword_entity_id_and_password_ok
 connection_loginByPassword_login_when_already_logged
 connection_loginByPassword_wrong_password
 connection_login_login_info_after_login
 connection_manager_calls_with_default_connection
 connection_manager_calls_with_dispatcher
 connection_manager_calls_with_thread_requester
 connection_manager_create_connection_to_accessible_bus
 connection_manager_create_connection_to_inaccessible_bus
 connection_manager_create_connection_to_invalid_host
 connection_manager_get_manager
 connection_manager_receive_call_with_default_connection
 fail_user_created_orb
 get_offer
 register_service
 ;
explicit tests ;

