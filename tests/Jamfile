
import option ;

path-constant here : . ;

project openbus/tests ;

local test-requirements =
  <threading>multi:<source>/boost//thread 
  <target-os>windows:<library>/openbus//idls
  <target-os>windows:<library>/scs//scs-stub
  <target-os>linux,<link>static:<source>/dl//dl
  <include>.
  <include>..
  <define>OPENBUS_SDK_TEST #Dangerous!
  <library>/openbus//openbus
  <library>/scs//scs
  <use>/boost//headers
  <library>/boost/program_options
  <library>/logger//logger
  <library>/openssl//openssl
  <library>/TAO//TAO
  ;

obj test-hello-stub
  : $(here)/idl/hello.idl
  : <warnings>off
  ;
explicit test-hello-stub ;

obj test-hello-skeleton
  : $(here)/idl/hello.idl
  : <generate>skeleton
    <warnings>off
    <implicit-dependency>test-hello-stub
  ;
explicit test-hello-skeleton ;

alias run-tests
  : [ run connect/host_port/connect_by_address_access_key.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connect/host_port/connect_by_address_access_key_legacy_on.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connect/host_port/connect_by_address_legacy_on.cpp : : : $(test-requirements) ]    
    [ run connect/host_port/connect_to_right_host_and_port.cpp : : : $(test-requirements) ]
    [ run connect/host_port/connect_to_wrong_host_and_port.cpp : : : $(test-requirements) ]
    [ run connect/host_port/connect_with_invalid_host.cpp : : : $(test-requirements) ]
    [ run connect/reference/connect_by_reference_access_key.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connect/reference/connect_by_reference_access_key_legacy_on.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connect/reference/connect_by_reference_legacy_on.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connect/reference/connect_with_valid_reference.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/dec_incompat_type_chain.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/dec_incompat_version_chain.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/enc_and_dec_chain_AB.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/enc_and_dec_chain_ABC.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/enc_and_dec_legacy_chain_AB.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/enc_and_dec_legacy_chain_ABC.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/import_chain.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/import_chain_invalid_token.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/import_chain_unknown_domain.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/make_chain_for_joined_chain.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/make_chain_for_know_entity.cpp : : : $(test-requirements) ]
    [ run connection/caller_chain/make_chain_for_unknow_entity.cpp : : : $(test-requirements) ]
    [ run connection/lifecycle/bus_ctx.cpp : : : $(test-requirements) ]
    [ run connection/lifecycle/create_conn.cpp : : : $(test-requirements) ]
    [ run connection/lifecycle/set_curr_conn.cpp : : : $(test-requirements) ]
    [ run connection/lifecycle/set_def_conn.cpp : : : $(test-requirements) ]
    [ run connection/login/login_info_after_login.cpp : : : $(test-requirements) ]
    [ run connection/loginByCertificate/entity_pkey_ok.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connection/loginByCertificate/entity_pkey_ok_invalid_host.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connection/loginByCertificate/entity_pkey_ok_valid_ref.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connection/loginByCertificate/entity_pkey_ok_wrong_host_port.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connection/loginByPassword/after_logout.cpp : : : $(test-requirements) ]
    [ run connection/loginByPassword/entity_id_and_password_ok.cpp : : : $(test-requirements) ]
    [ run connection/loginByPassword/entity_id_and_password_ok_valid_ref.cpp : : : $(test-requirements) ]
    [ run connection/loginByPassword/invalid_host.cpp : : : $(test-requirements) ]
    [ run connection/loginByPassword/login_when_already_logged.cpp : : : $(test-requirements) ]
    [ run connection/loginByPassword/logout_on_invalid_login.cpp : : : $(test-requirements) ]
    [ run connection/loginByPassword/on_invalid_login.cpp : : : $(test-requirements) ]
    [ run connection/loginByPassword/too_many_attempts.cpp : : : $(test-requirements) ]
    [ run connection/loginByPassword/unknown_domain.cpp : : : $(test-requirements) ]
    [ run connection/loginByPassword/wrong_host_port.cpp : : : $(test-requirements) ]
    [ run connection/loginByPassword/wrong_password.cpp : : : $(test-requirements) ]
    [ run connection/loginBySharedAuth/enc_and_dec_secret.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connection/loginBySharedAuth/login.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connection/loginBySharedAuth/login_invalid_host.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connection/loginBySharedAuth/login_valid_ref.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connection/loginBySharedAuth/login_wrong_host_port.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connection/loginBySharedAuth/try_login_after_cancel.cpp : : admin/TestCppHello.key : $(test-requirements) ]
    [ run connection/logout/logout_twice.cpp : : : $(test-requirements) ]
    [ run fail_user_created_orb.cpp : : : $(test-requirements) ]
    [ run get_offer.cpp : :
      : $(test-requirements)
        <library>test-hello-stub
      	<library>test-hello-skeleton
      	<implicit-dependency>test-hello-stub
      	<implicit-dependency>test-hello-skeleton 
      	<dependency>test-hello-stub
      	<dependency>test-hello-skeleton ]
    [ run openbus_context/get_bus_ctx.cpp : : : $(test-requirements) ]
    [ run openbus_context/getting_orb_with_bus_ctx.cpp : : : $(test-requirements) ]
    [ run openbus_context/on_call_dispatch.cpp : :
      : $(test-requirements)
        <library>test-hello-stub
    	<library>test-hello-skeleton
    	<dependency>test-hello-skeleton
    	<implicit-dependency>test-hello-skeleton ]
    [ run openbus_context/on_call_dispatch_null_return.cpp : :
      : $(test-requirements)
        <library>test-hello-stub
    	<library>test-hello-skeleton
    	<dependency>test-hello-skeleton
    	<implicit-dependency>test-hello-skeleton ]
    [ run openbus_context/orb_is_same.cpp : : : $(test-requirements) ]
    [ run openbus_context/rcv_call_def_conn.cpp : :
      : $(test-requirements)
        <library>test-hello-stub
    	<library>test-hello-skeleton
    	<dependency>test-hello-skeleton
    	<implicit-dependency>test-hello-skeleton ]
  ;
explicit run-tests ;
